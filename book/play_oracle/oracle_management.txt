oracle management

1. dba responsibility

1) install and upgrade oracle databases
2) create tables, tablespace, views, index
3) make plan for backup and recovery
4) database permission management, performance tuning, troubleshooting
5) advanced dba, project development, sql, procedure, trigger, rule, package


2. sys and system user

sys -> sys plan (basic table, dynamic views)
roles:
dba (database admin), sysdba(system admin), sysoper(system operator)

SQL> conn sys/change_on_install; -- error
SQL> conn sys/change_on_install as sysdba; (must specify sysdba or sysoper)

sysdba > sysoper > dba

system -> system plan (secondary data)
roles:
dba, sysdba

SQL> conn system/manager; -- default dba
SQL> conn system/manager as sysdba; -- also can


SQL> show parameter;


3. backup and recovery

export vs import

export

table, plan, databases
common option:
userid, tables, owner, full=y, inctype, rows, file

table -> disk
1) export table
SQL> exp userid=scott/m123@myora1 tables=(emp,dept) file=d:\e1.dmp
SQL> exp userid=system/manager@myora1 tables=(scott.emp) file=d:\e2.dmp

2) export table structure
SQL> exp userid=scott/m123@accp tables=(emp) file=d:\e3.dmp rows=n;
-- big table use below method
SQL> exp userid=scott/m123@accp tables=(emp) file=d:\e3.dmp direct=y;

3) export owner/plan
SQL> exp scott/m123@myora1 owner=scott file=d:\scott.dmp;
SQL> exp system/manager@myora1 owner(system,scott) file=d:\system.dmp

4) export databases
-- increment backup
SQL> exp userid=system/manager@myora1 full=y inctype=complete file=d:\x.dmp


import

under BIN path

1)import table
SQL> imp userid=scott/m123@myora1 tables=(emp) file=d:\xx.dmp
SQL> imp userid=system@manager@myora1 tables=(emp) file=d:\xx.dmp touser=scott;

2) import table structure
SQL> imp userid=scott/m123@myora1 tables=(emp) file=d:\xx.dmp rows=n;

3) import data
SQL> imp userid=scott/m123@myora1 tables=(emp) file=d:\xx.dmp ignore=y;

4) import plan
SQL> imp userid=scott/m123 file=d:\xxx.dmp
SQL> imp userid=system/manager file=d:\xxx.dmp fromuser=system touser=scott;

5) import database
SQL> imp userid=system/manager full=y file=d:\xxx.dmp


4. data dictionary and dynamic views

data dictionary (system info or static info)
1) under sys plan
2) only support select
3) includes base table and data dictionary views (user_xxx, all_xxx, dba_xxx)

e.g
-- user_tables, all_tables, dba_tables;
-- tables current user create
SQL> select table_name from user_tables;
-- tables current user can visit 
SQL> select table_name from all_tables;
-- must dba role, all the tables in all the plans
SQL> select table_name from dba_tables;

-- username, permission, role stored in data dictionary
-- dba_users, dba_sys_privs, dba_tab_privs, dba_col_privs, dba_role_privs
SQL> select * from dba_role_privs where grantee='SCOTT';
							   privileges

	             			-> privilege 1
role (connect, resource)    -> privilege 2
							-> privilege 3


system privilege (database level), object privilege (table level)
-- how many system privilege 140
SQL> select * from system_privilege_map order by name
-- how many object privilege 16
SQL> select distinct privilege from dba_tab_privs;
-- how many roles 25
SQL> select * from dba_roles;
-- how many system privilege for a role
SQL> select * from dba_sys_privs where grantee='CONNECT';
SQL> select * from role_sys_privs where grantee='CONNECT';
-- how many object privilege for a role
SQL> select * from dba_tab_privs where grantee='CONNECT';
-- how to check the role for a user
SQL> select * from dba_role_privs where grantee='SCOTT';

SQL> select tablespace from dba_tablespaces;
SQL> select username from dba_users;

-- check the data dict views user can visit
SQL> select * from dict where comment like '%grant%'
-- check current db full name
SQL> select * from global_name;


dynamic performance views (system running or dynamic info)

when user starts the oracle server, system will automatically create dynamic performance views. when user stops the oracle server, system will delete dynamic views. Dynamic views all start with v_$, synonym v$ e.g v_$datafile and v$datafile. Only sys and dba can check dynamic performance views.


5. tablespace

table space: databases logical part
data files: databases physical part

databases -> tablespace -> data files

database logical structure:

table space -> field -> sector -> block

table space:
+-----+-----+
|block|sect-|
+-----+or	+
|     |     |
+-----+-----+
|field->file|
+           +
|           |
+-----------+
|           |
+           +
|           |
+-----------+

1) dba can control the disk space by using table space
2) dba can deploy different types data to different places. 
This will improve the I/O performance and also good for backup and recovery.


-- create tablespace data01, use data01.dbf data file, sector size 128k (need dba roleï¼Œsize max 500m for 1 file)
SQL> create tablespace data01 datafile 'd:\test\data01.dbf' size 20m uniform size 128k

-- use tablespace (default use system tablespace)
SQL> create table mypart(deptno number(4), dname varchar2(14), loc varchar2(13)) tablespace data01;

-- tablespace includes Tables, Indexes, Clusters

-- change tablespace status
SQL> alter tablespace XXX offline;
SQL> alter tablespace XXX online;
SQL> alter tablespace XXX read only;
SQL> alter tablespace XXX read write;
-- system user
SQL> drop tablespace XXX including contents and datafiles;


-- system tablespace can't be changed to read only

SQL> select * from all_tables where tablespace_name='XXX';
-- user_tables
SQL> select tablespace_name, table_name from user_tables where table_name='emp';


-- extend tablespace
-- add datafile
SQL> alter tablespace sp01 add datafile 'd:\test\sp02.dbf' size 20m

-- resize datafile 
SQL> alter tablespace XXX 'd:\test\sp01.dbf' resize 20m;

-- set file auto extend
SQL> alter tablespace XXX 'd:\test\sp01.dbf' autoextend on next 10m maxsize 500m;


-- move data file
1) check the tablespace for the datafile
SQL> select tablespace_name from dba_data_files where file_name='d:\sp001.dbf';
2) change tablespace to offline
SQL> alter tablespace sp01 offline;
3) move data file to specific path
SQL> host move d:\sp001.dbf c:\sp01.dbf
4) change the tablespace datafile path
SQL> alter tablespace sp01 rename datafile 'd:\sp001.dbf' to 'c:\sp001.dbf'
5) change tablespace status to online
SQL> alter tablespace data01 online;



-- other tablespace
Indexes tablespace
undo tablespace
temp tablespace
non-standard tablespace

















