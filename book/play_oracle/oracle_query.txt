Oracle Query

1. 
SQL> clear;

emp, dept tables

emp table:
FIELDS:										TYPES:
EMPNO										NUMBER
ENAME										VARCHAR2
JOB											VARCHAR2
MGR (direct superior, report to whom)		NUMBER
HIREDATE									DATE
SAL											NUMBER
COMM (bonus)								NUMBER
DEPTNO										NUMBER

dept table:
FILEDS:										TYPES:
DEPTNO										NUMBER(2)
DNAME										VARCHAR2(14)
LOC											VARCHAR2(13)


2. Basic Query

SQL>desc dept;
SQL>select * from dept;

-- show operation time
SQL>set timing on;

SQL> select ename, sal from emp;

-- create huge data in tables 2^n
SQL> insert into users (userid, username, userpss) select * from users;
SQL> select count(*) from users;

SQL> select distinct deptno, job from emp;

-- ORALCE field value is case sensitive
SQL> select depno, job, sal from emp where ename='smith';  -- empty
SQL> select depno, job, sal from emp where ename='SMITH';  -- 2 rows


-- Annual salary
SQL> select sal*13+comm*13 as ANNUAL_SAL, ename from emp;
-- issue any field has null, the cal result is null
SQL> select sal*13+nvl(comm, 0)*13 as ANNUAL_SAL, ename, comm from emp


-- where
SQL> select ename, sal from emp where sal > 3000;
-- DATE operation highlight
SQL> select ename, hiredate from emp where hiredate > '1-1æœˆ-1982';
SQL> select ename, sal from emp where sal between 2000 and 2500; -- both inclusive
SQL> select ename, sal from emp where ename like 'S%';
-- the third element is O
SQL> select ename, sal from emp where ename like '__O%'
SQL> select * from emp where empno in (123,345,800);
SQL> select * from emp where mgr is null;


--logic combination
SQL> select * from emp where (sal>500 or job='Manager') and ename like 'J%';
-- question: only select the field with its first letter is uppercase

--order by
SQL> select * from emp order by sal desc;  -- or asc
SQL> select * from emp order by deptno asc, sal desc;

--alias highlight
SQL> select ename, (sal+nvl(comm,0))*12 as annual_sal from emp order by annual_sal asc;


3. Advanced Query

aggregated functions:

MAX(), MIN(), AVG(), SUM(), COUNT()

only can be used in select..group by, having, order by
sequence: group by, having, order by
goup by field must in select clause

-- highlight aggregated functions!
-- sal = max(sal) is wrong, aggregate functions can't be put in where
SQL> select ename, sal from emp e1 where sal = (select max(sal) from emp e2); 
SQL> select * from emp where sal > (select avg(sal) from emp);


-- group by and having
-- can use aggregated function
-- aggregated field (group by field) must appear in select clause
SQL> select avg(sal), max(sal), deptno from emp group by deptno;
SQL> select min(sal), avg(sal), max(sal), deptno, job from emp group by deptno, job;
SQL> select deptno, avg(sal) from emp group by deptno having avg(sal) > 2000 order by avg(sal);


-- multiple tables (Cartesian product conditions must be no less than table numbers-1)
SQL> select e.ename, e.sal, d.dname from emp e, dept d where e.depno = d.depno;
SQL> select d.dname, e.ename, e.sal from dept d, emp e where d.depno = e.depno and d.depno = 10;
SQL> select e.ename, e.sal, s.grade from emp e, salgrade s where e.sal between s.losal and s.hisal;
SQL> select e.ename, e.sal, d.dname from emp e, dept d where e.deptno = d.deptno order by e.deptno;
-- self join
SQL> select e1.ename, e2.ename from emp e1, emp e2 where e1.mgr = e2.empno and e1.ename = 'FORD'; 


-- subquery or nested query
SQL> select deptno from emp where ename = 'SMITH';
-- single line : subquery only return one line
SQL> select * from emp where deptno = (select deptno from emp where ename = 'SMITH');
-- multiple line : subquery return multiple lines. usually use in, all, any
SQL> select * from emp where job in (select job from emp where deptno = 10);

SQL> select ename, sal, deptno from emp where sal > all(select sal from emp where deptno=30);
SQL> select ename, sal, deptno from emp where sal > (select max(sal) from emp where deptno=30);
second is better

SQL> select ename, sal, deptno from emp where sal > any(select sal from emp where deptno=30);
SQL> select ename, sal, deptno from emp where sal > (select min(sal) from emp where deptno=30);
second is better

-- multiple columns subquery to get value
SQL> select deptno, job from emp where ename = 'SMITH';
SQL> select * from emp where (deptno,job) = (select deptno,job from emp where ename = 'SMITH');

-- highlight subquery as new table
SQL> select deptno, avg(sal) as mysal from emp group by deptno;
SQL> select e2.ename, e2.sal, e2.deptno, e1.sal from emp e2, (select deptno, avg(sal) as mysal from emp group by deptno) e1, where e2.deptno = e1.deptno and e2.sal > e1.sal;




