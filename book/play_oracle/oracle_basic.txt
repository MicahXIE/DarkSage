oracle 9i (vedio by Han shunping)

1. oracle 9i start will need more than 100M memory (for MYORA1)

2. two important processes: TNSListener (JDBC etc. ) and MYORA1

3. sys, system, scott (initial users). accesses are different.

4. 

SQL> show user

SQL> conn system/manager (switch user)

SQL> dis(connect)

SQL> passw(ord) (change password, sys/system)

SQL> exit

file operation

aa.sql:
select * from emp;

SQL> start d:\aa.sql (or @ d:\aa.sql)
SQL> edit d:\aa.sql

SQL> spool d:\bb.sql
SQL> select * from emp;
SQL> spool off


user table

SQL> select * from user_tab_comments 

env setup

SQL> show linesize
SQL> set linesize 90
SQL> set pagesize 2

5. user management

system or dba

SQL> create user xiaoming identified by m123 (start w alphabet)
SQL> password xiaoming
SQL> drop user xiaoming [cascade]

when drop the user, if user already created tables, need to add parameter
cascade to drop user.


new creating user doesn't have the permission to login in the database server
SQL> grant connect to xiaoming (connect, resource, dba role)

140 kinds of accesses or permission
system permission: databases related, create session
object permission: user permission to other user data object

data object: tables, views, fuctions, procedure, roles, tablesapces etc.

roles(different types of users, simple for permission management):
pre-defined roles
customized roles

System permission(connect, resource, dba):
SQL> grant resource to xiaoming;
SQL> create table test(testid varchar2(20), name varchar2(20));
SQL> select * from test;


Object permission(select, insert, update, delete, all, create index):
SQL> grant select on emp to xiaoming;
SQL> conn xiaoming/m1234;
SQL> select * from scott.emp; (if not use scott, default is local table)


revoke permission:
SQL> revoke select on emp from xiaoming;

permission pass:
SQL> grant select on emp to xiaoming with grant option;
SQL> grant connect to xiaoming with admin option


cascade revoke


6. Profile (login and password limitation)s
SQL> create profile lock_account limit failed_login_attempts 3 password_lock_time 2;
SQL> alter user xiaoming profile lock_account;
unlock
SQL> alter user xiaoming unlock;
change password limitation
SQL> create profile myprofile limit password_life_time 10 password_grace_time 2;
SQL> alter user xiaoming profile myprofile;
password history
SQL> create profile password_history limit password_life_time 10 password_grace_time 2 
password_reuse_time 10;

delete profile
SQL> drop profile password_history[cascase]


7. Table Management

Table name
1. start with alphabeta
2. less than 30 chars
3. A-Z, a-z, 0-9, $, # etc
4. can't use the oracle key words

data type:
char: fixed length	(max 2000)	e.g. char(10)
varchar2: variable length	(max 4000)	e.g. varchar2(20)
clob: character large object (max 4G)
number: range from 10^(-38) to 10^38 number(5) e.g 99999, number(5,2) e.g 999.99
date
timestamp
blob: binary data e.g. pic and sound (usually store path)

question: date not define null?

-- comment

SQL> create table student (
xh number(4),
xm varchar2(20),
sex char(2),
birthday date,
salary number(7,2)
);

table spaces(disk level): store table place (like c:\ d:\ e:\)

SQL> create table classes (
classId number(2),
cname varchar2(40)
);

SQL>alter table student add (classid number(2));
SQL>alter table student modify (xm varchar2(30));
SQL>desc student;
--must empty table
SQL>alter table student modify (xm char(30));
SQL>alter table student drop column sal;
SQL>rename student to stu;
SQL>drop table student;


SQL>insert into student values (1, 'xiaoming', 'M', '11-5æœˆ-2005', 2345.6, 12);
SQL>alter session set nls_date_format = 'yyyy-mm-dd';
SQL>insert into student values (2, 'xiaoming2', 'M', '2005-05-11', 2345.6, 12);
partial insertion
SQL>insert into student (xh, xm, sex) values (3, 'John', 'F');
SQL>insert into student (xh, xm, sex, birthday) values (4, 'aa', 'F', null);
SQL>select * from student where birthday is null;(or is not null);


SQL>update student set sex='M' where xh=3;
SQL>update student set sex='M', birthday='1980-04-01' where xh=3;
SQL>update student set sal=sal/2 where sex = 'M';

-- set new one will overwrite previous one savepoint
SQL>savepoint a;
SQL>delete from student;
SQL>rollback to a;

-- can't rollback and didn't write the log. Faster than delete
SQL>truncate table student; 

SQL>delete from student where xh=3;
SQL>drop table student;




tips

VARCHAR is reserved by Oracle to support distinction between NULL and empty string in future, as ANSI standard prescribes. VARCHAR2 does not distinguish between a NULL and empty string, and never will. If you rely on empty string and NULL being the same thing, you should use VARCHAR2 .





default user:
sys/change_on_install
system/manager














